generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url = "***"
}

model User {
  id           Int       @id @default(autoincrement())
  wishProducts Product[]
  wishShops    Shop[]
  wishEvents   Event[]
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @default(now()) @updatedAt
}

model Product {
  id          Int            @id @default(autoincrement())
  name        ProductName[]
  image       ProductImage[]
  wishers     User[]
  Shop        Shop?          @relation(fields: [shopId], references: [id])
  shopId      Int?
  tags        Tag[]
  description String?
  instaText   String?
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @default(now()) @updatedAt
}

model ProductName {
  id        Int      @id @default(autoincrement())
  lang      String
  word      String
  Product   Product? @relation(fields: [productId], references: [id])
  productId Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model ProductImage {
  id        Int      @id @default(autoincrement())
  url       String
  order     Int
  Product   Product? @relation(fields: [productId], references: [id])
  productId Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model Shop {
  id          Int         @id @default(autoincrement())
  name        ShopName[]
  discription String?
  images      ShopImage[]
  products    Product[]
  wishers     User[]
  coordinate  String?
  address     String?
  tags        Tag[]
  city        String?
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @default(now()) @updatedAt
}

model ShopName {
  id        Int      @id @default(autoincrement())
  lang      String
  word      String
  Shop      Shop?    @relation(fields: [shopId], references: [id])
  shopId    Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model ShopImage {
  id        Int      @id @default(autoincrement())
  url       String
  order     Int
  Shop      Shop?    @relation(fields: [shopId], references: [id])
  shopId    Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model Event {
  id          Int          @id @default(autoincrement())
  discription String
  images      EventImage[]
  videos      EventVideo[]
  wishers     User[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @default(now()) @updatedAt
}

model EventImage {
  id        Int      @id @default(autoincrement())
  url       String
  order     Int
  Event     Event?   @relation(fields: [eventId], references: [id])
  eventId   Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model EventVideo {
  id        Int      @id @default(autoincrement())
  url       String
  order     Int
  Event     Event?   @relation(fields: [eventId], references: [id])
  eventId   Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model Category {
  id        Int            @id @default(autoincrement())
  name      CategoryName[]
  tags      Tag[]
  createdAt DateTime       @default(now())
  updatedAt DateTime       @default(now()) @updatedAt
}

model CategoryName {
  id         Int       @id @default(autoincrement())
  lang       String
  word       String
  Category   Category? @relation(fields: [categoryId], references: [id])
  categoryId Int?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @default(now()) @updatedAt
}

model Tag {
  id         Int       @id @default(autoincrement())
  name       TagName[]
  Category   Category? @relation(fields: [categoryId], references: [id])
  categoryId Int?
  products   Product[]
  shops      Shop[]
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @default(now()) @updatedAt
}

model TagName {
  id        Int      @id @default(autoincrement())
  lang      String
  word      String
  Tag       Tag?     @relation(fields: [tagId], references: [id])
  tagId     Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}
